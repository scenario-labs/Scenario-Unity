name: scenario-package

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install zip
      run: sudo apt-get install zip

    - name: Get Version
      id: get_version
      run: |
        version=$(cat VERSION)
        echo "Current version: $version"
        IFS='.' read -ra version_parts <<< "$version"
        minor_version=${version_parts[1]}
        patch_version=${version_parts[2]}
        if ((patch_version == 9)); then
            new_minor_version=$((minor_version+1))
            new_patch_version=0
        else
            new_minor_version=$minor_version
            new_patch_version=$((patch_version+1))
        fi
        new_version="${version_parts[0]}.$new_minor_version.$new_patch_version"
        echo "New version: $new_version"
        echo $new_version > VERSION
        echo "VERSION=$new_version" >> $GITHUB_ENV

    - name: Archive code
      run: zip -r Scenario-v${{ env.VERSION }}.zip Scenario Textures README.md Scenario.wlt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
      with:
        tag_name: ${{ format('Scenario v{0}', env.VERSION) }}
        release_name: Release ${{ format('Scenario v{0}', env.VERSION) }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Scenario-v${{ env.VERSION }}.zip
        asset_name: Scenario-v${{ env.VERSION }}.zip
        asset_content_type: application/zip
